"""Add password_hash column

Revision ID: 36e61b7bde33
Revises: a3e4f33225b1
Create Date: 2025-03-13 17:47:40.027877

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '36e61b7bde33'
down_revision: Union[str, None] = 'a3e4f33225b1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('comments', sa.Column('created_at', sa.DateTime(), nullable=False, comment='Fecha y hora de creación del registro'))
    op.add_column('comments', sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Fecha y hora de última actualización del registro'))
    op.add_column('comments', sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha y hora de eliminación lógica (None=no eliminado)'))
    op.alter_column('comments', 'id',
               existing_type=sa.INTEGER(),
               comment='ID único del comentario',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('comments', 'content',
               existing_type=sa.VARCHAR(),
               nullable=False,
               comment='Texto del comentario')
    op.alter_column('comments', 'user_id',
               existing_type=sa.INTEGER(),
               comment='ID del usuario autor',
               existing_nullable=True)
    op.alter_column('comments', 'post_id',
               existing_type=sa.INTEGER(),
               comment='ID del post relacionado',
               existing_nullable=True)
    op.create_index(op.f('ix_comments_created_at'), 'comments', ['created_at'], unique=False)
    op.create_index(op.f('ix_comments_updated_at'), 'comments', ['updated_at'], unique=False)
    op.alter_column('post_tag', 'post_id',
               existing_type=sa.INTEGER(),
               comment='ID del post',
               existing_nullable=True)
    op.alter_column('post_tag', 'tag_id',
               existing_type=sa.INTEGER(),
               comment='ID del tag',
               existing_nullable=True)
    op.add_column('posts', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('posts', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('posts', sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha y hora de eliminación lógica (None=no eliminado)'))
    op.alter_column('posts', 'id',
               existing_type=sa.INTEGER(),
               comment='ID único del post',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('posts_id_seq'::regclass)"))
    op.alter_column('posts', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False,
               comment='Título del post')
    op.alter_column('posts', 'content',
               existing_type=sa.VARCHAR(),
               nullable=False,
               comment='Contenido del post')
    op.alter_column('posts', 'user_id',
               existing_type=sa.INTEGER(),
               comment='ID del autor del post',
               existing_nullable=True)
    op.add_column('tags', sa.Column('created_at', sa.DateTime(), nullable=False, comment='Fecha y hora de creación del registro'))
    op.add_column('tags', sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Fecha y hora de última actualización del registro'))
    op.add_column('tags', sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha y hora de eliminación lógica (None=no eliminado)'))
    op.alter_column('tags', 'id',
               existing_type=sa.INTEGER(),
               comment='ID único de la etiqueta',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('tags', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False,
               comment='Nombre de la etiqueta')
    op.create_index(op.f('ix_tags_created_at'), 'tags', ['created_at'], unique=False)
    op.create_index(op.f('ix_tags_updated_at'), 'tags', ['updated_at'], unique=False)
    op.add_column('users', sa.Column('password_hash', sa.String(length=128), nullable=False, comment='Hash de la contraseña'))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=False, comment='Fecha y hora de creación del registro'))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Fecha y hora de última actualización del registro'))
    op.add_column('users', sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha y hora de eliminación lógica (None=no eliminado)'))
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               comment='ID único del usuario',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('users_id_seq'::regclass)"))
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=False,
               comment='Nombre de usuario único')
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_updated_at'), 'users', ['updated_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_updated_at'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=True,
               comment=None,
               existing_comment='Nombre de usuario único')
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='ID único del usuario',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('users_id_seq'::regclass)"))
    op.drop_column('users', 'deleted_at')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'password_hash')
    op.drop_index(op.f('ix_tags_updated_at'), table_name='tags')
    op.drop_index(op.f('ix_tags_created_at'), table_name='tags')
    op.alter_column('tags', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True,
               comment=None,
               existing_comment='Nombre de la etiqueta')
    op.alter_column('tags', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='ID único de la etiqueta',
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('tags', 'deleted_at')
    op.drop_column('tags', 'updated_at')
    op.drop_column('tags', 'created_at')
    op.alter_column('posts', 'user_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='ID del autor del post',
               existing_nullable=True)
    op.alter_column('posts', 'content',
               existing_type=sa.VARCHAR(),
               nullable=True,
               comment=None,
               existing_comment='Contenido del post')
    op.alter_column('posts', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True,
               comment=None,
               existing_comment='Título del post')
    op.alter_column('posts', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='ID único del post',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('posts_id_seq'::regclass)"))
    op.drop_column('posts', 'deleted_at')
    op.drop_column('posts', 'updated_at')
    op.drop_column('posts', 'created_at')
    op.alter_column('post_tag', 'tag_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='ID del tag',
               existing_nullable=True)
    op.alter_column('post_tag', 'post_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='ID del post',
               existing_nullable=True)
    op.drop_index(op.f('ix_comments_updated_at'), table_name='comments')
    op.drop_index(op.f('ix_comments_created_at'), table_name='comments')
    op.alter_column('comments', 'post_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='ID del post relacionado',
               existing_nullable=True)
    op.alter_column('comments', 'user_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='ID del usuario autor',
               existing_nullable=True)
    op.alter_column('comments', 'content',
               existing_type=sa.VARCHAR(),
               nullable=True,
               comment=None,
               existing_comment='Texto del comentario')
    op.alter_column('comments', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='ID único del comentario',
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('comments', 'deleted_at')
    op.drop_column('comments', 'updated_at')
    op.drop_column('comments', 'created_at')
    # ### end Alembic commands ###
